/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.sachin.stockservice.api;

import com.sachin.stockservice.model.ErrorDetails;
import com.sachin.stockservice.model.StockEvent;
import com.sachin.stockservice.model.StockRequest;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-01-15T23:32:04.763918800+05:30[Asia/Calcutta]")

@Validated
@Api(value = "stockQuote", description = "the stockQuote API")
public interface StockQuoteApi {

    default StockQuoteApiDelegate getDelegate() {
        return new StockQuoteApiDelegate() {};
    }

    /**
     * POST /stockQuote
     *
     * @param stockRequest  (optional)
     * @return event response (status code 200)
     *         or error response (status code 400)
     */
    @ApiOperation(value = "", nickname = "stockQuotePost", notes = "", response = StockEvent.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "event response", response = StockEvent.class),
        @ApiResponse(code = 400, message = "error response", response = ErrorDetails.class) })
    @RequestMapping(value = "/stockQuote",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<StockEvent> stockQuotePost(@ApiParam(value = ""  )  @Valid @RequestBody(required = false) StockRequest stockRequest) {
        return getDelegate().stockQuotePost(stockRequest);
    }

}
