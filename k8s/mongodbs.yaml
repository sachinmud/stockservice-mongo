apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: mongodb-standalone-sc
reclaimPolicy: Delete
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
#allowVolumeExpansion: true

---

apiVersion: v1
kind: PersistentVolume
metadata:
    name: mongodb-standalone-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: mongodb-standalone-sc
  local:
    path: /run/desktop/mnt/host/c/Sachin/MongoKube/data
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
            - docker-desktop

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-standalone-pvc
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: mongodb-standalone-sc
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-standalone
spec:
  serviceName: database
  replicas: 1
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
        selector: mongodb-standalone
    spec:
      containers:
      - name: mongodb-standalone
        image: mongo:4.0.8
        env:
          - name: MONGO_INITDB_ROOT_USERNAME_FILE
            value: admin
          - name: MONGO_INITDB_ROOT_PASSWORD_FILE
            value: password
          - name: MONGO_INITDB_DATABASE
            value: stockservicedb
        volumeMounts:
          - name: mongodb-data
            mountPath: /data/db
      nodeSelector:
        kubernetes.io/hostname: docker-desktop  
      volumes:
      - name: mongodb-data
        persistentVolumeClaim:
          claimName: mongodb-standalone-pvc      

---
apiVersion: v1
kind: Service
metadata:
  name: database
  labels:
    app: database
spec:
  clusterIP: None
  selector:
    app: database           