#Processor
server.port=8086
spring.application.name=stockdetailsprocessorservice
stockevent.kafka.stream.topic=stockeventssource
spring.cloud.stream.function.definition=eventMessageProcessor
spring.cloud.stream.bindings.eventMessageProcessor-in-0.destination=stockeventssource
spring.cloud.stream.bindings.eventMessageProcessor-in-0.consumer.configuration.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.bindings.eventMessageProcessor-in-0.consumer.configuration.value.deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.cloud.stream.bindings.eventMessageProcessor-out-0.destination=stockeventsdestination
spring.cloud.stream.bindings.eventMessageProcessor-out-0.producer.configuration.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.bindings.eventMessageProcessor-out-0.producer.configuration.value.deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.cloud.stream.kafka.streams.binder.brokers=localhost:9092
spring.cloud.stream.kafka.streams.configuration.commit.interval.ms=100
